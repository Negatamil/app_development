{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authAPI from '../../services/api/authAPI';\n\n// Async thunks\nexport const loginUser = createAsyncThunk('auth/loginUser', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // For demo purposes, simulate a successful login\n    // In production, this would call the actual API\n    const mockUser = {\n      id: 1,\n      email: email,\n      role: email.includes('admin') ? 'ADMIN' : email.includes('manager') ? 'MANAGER' : email.includes('security') ? 'SECURITY' : 'USER'\n    };\n    const mockToken = 'demo-token-' + Date.now();\n    localStorage.setItem('token', mockToken);\n    localStorage.setItem('user', JSON.stringify(mockUser));\n    return {\n      token: mockToken,\n      user: mockUser\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async ({\n  email,\n  password,\n  role = 'USER'\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // For demo purposes, simulate a successful registration\n    // In production, this would call the actual API\n    return {\n      message: 'Registration successful'\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  } catch (error) {\n    return rejectWithValue('Logout failed');\n  }\n});\nexport const checkAuthStatus = createAsyncThunk('auth/checkAuthStatus', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      return {\n        token,\n        user: JSON.parse(user),\n        isAuthenticated: true\n      };\n    }\n    return {\n      token: null,\n      user: null,\n      isAuthenticated: false\n    };\n  } catch (error) {\n    return rejectWithValue('Auth check failed');\n  }\n});\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n  role: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearAuth: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.role = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      var _action$payload$user;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.role = (_action$payload$user = action.payload.user) === null || _action$payload$user === void 0 ? void 0 : _action$payload$user.role;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    })\n\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, state => {\n      state.loading = false;\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.role = null;\n      state.error = null;\n    })\n\n    // Check Auth Status\n    .addCase(checkAuthStatus.fulfilled, (state, action) => {\n      var _action$payload$user2;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.role = ((_action$payload$user2 = action.payload.user) === null || _action$payload$user2 === void 0 ? void 0 : _action$payload$user2.role) || null;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","loginUser","email","password","rejectWithValue","mockUser","id","role","includes","mockToken","Date","now","localStorage","setItem","JSON","stringify","token","user","error","_error$response","_error$response$data","response","data","message","registerUser","_error$response2","_error$response2$data","logoutUser","_","removeItem","checkAuthStatus","getItem","parse","isAuthenticated","initialState","loading","authSlice","name","reducers","clearError","state","clearAuth","extraReducers","builder","addCase","pending","fulfilled","action","_action$payload$user","payload","rejected","_action$payload$user2","actions","reducer"],"sources":["C:/Users/HomePC/Desktop/parkingg/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authAPI from '../../services/api/authAPI';\r\n\r\n// Async thunks\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      // For demo purposes, simulate a successful login\r\n      // In production, this would call the actual API\r\n      const mockUser = {\r\n        id: 1,\r\n        email: email,\r\n        role: email.includes('admin') ? 'ADMIN' : \r\n              email.includes('manager') ? 'MANAGER' : \r\n              email.includes('security') ? 'SECURITY' : 'USER'\r\n      };\r\n      \r\n      const mockToken = 'demo-token-' + Date.now();\r\n      \r\n      localStorage.setItem('token', mockToken);\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n      \r\n      return { token: mockToken, user: mockUser };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/registerUser',\r\n  async ({ email, password, role = 'USER' }, { rejectWithValue }) => {\r\n    try {\r\n      // For demo purposes, simulate a successful registration\r\n      // In production, this would call the actual API\r\n      return { message: 'Registration successful' };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logoutUser',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      return true;\r\n    } catch (error) {\r\n      return rejectWithValue('Logout failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const checkAuthStatus = createAsyncThunk(\r\n  'auth/checkAuthStatus',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = localStorage.getItem('user');\r\n      \r\n      if (token && user) {\r\n        return {\r\n          token,\r\n          user: JSON.parse(user),\r\n          isAuthenticated: true\r\n        };\r\n      }\r\n      \r\n      return {\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false\r\n      };\r\n    } catch (error) {\r\n      return rejectWithValue('Auth check failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n  role: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearAuth: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.role = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.role = action.payload.user?.role;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.isAuthenticated = false;\r\n      })\r\n      \r\n      // Register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Logout\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n        state.role = null;\r\n        state.error = null;\r\n      })\r\n      \r\n      // Check Auth Status\r\n      .addCase(checkAuthStatus.fulfilled, (state, action) => {\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = action.payload.isAuthenticated;\r\n        state.role = action.payload.user?.role || null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearAuth } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}