{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authAPI from '../../services/api/authAPI';\n\n// Async thunks\nexport const loginUser = createAsyncThunk('auth/loginUser', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.login(email, password);\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async ({\n  email,\n  password,\n  role = 'USER'\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.register(email, password, role);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  } catch (error) {\n    return rejectWithValue('Logout failed');\n  }\n});\nexport const checkAuthStatus = createAsyncThunk('auth/checkAuthStatus', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      return {\n        token,\n        user: JSON.parse(user),\n        isAuthenticated: true\n      };\n    }\n    return {\n      token: null,\n      user: null,\n      isAuthenticated: false\n    };\n  } catch (error) {\n    return rejectWithValue('Auth check failed');\n  }\n});\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n  role: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearAuth: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.role = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      var _action$payload$user;\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.role = (_action$payload$user = action.payload.user) === null || _action$payload$user === void 0 ? void 0 : _action$payload$user.role;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    })\n\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, state => {\n      state.loading = false;\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.role = null;\n      state.error = null;\n    })\n\n    // Check Auth Status\n    .addCase(checkAuthStatus.fulfilled, (state, action) => {\n      var _action$payload$user2;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.role = ((_action$payload$user2 = action.payload.user) === null || _action$payload$user2 === void 0 ? void 0 : _action$payload$user2.role) || null;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","loginUser","email","password","rejectWithValue","response","login","localStorage","setItem","data","token","JSON","stringify","user","error","_error$response","_error$response$data","message","registerUser","role","register","_error$response2","_error$response2$data","logoutUser","_","removeItem","checkAuthStatus","getItem","parse","isAuthenticated","initialState","loading","authSlice","name","reducers","clearError","state","clearAuth","extraReducers","builder","addCase","pending","fulfilled","action","_action$payload$user","payload","rejected","_action$payload$user2","actions","reducer"],"sources":["C:/Users/HomePC/Desktop/parkingg/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authAPI from '../../services/api/authAPI';\r\n\r\n// Async thunks\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.login(email, password);\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/registerUser',\r\n  async ({ email, password, role = 'USER' }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.register(email, password, role);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logoutUser',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      return true;\r\n    } catch (error) {\r\n      return rejectWithValue('Logout failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const checkAuthStatus = createAsyncThunk(\r\n  'auth/checkAuthStatus',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = localStorage.getItem('user');\r\n      \r\n      if (token && user) {\r\n        return {\r\n          token,\r\n          user: JSON.parse(user),\r\n          isAuthenticated: true\r\n        };\r\n      }\r\n      \r\n      return {\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false\r\n      };\r\n    } catch (error) {\r\n      return rejectWithValue('Auth check failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n  role: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearAuth: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.role = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.role = action.payload.user?.role;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.isAuthenticated = false;\r\n      })\r\n      \r\n      // Register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Logout\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n        state.role = null;\r\n        state.error = null;\r\n      })\r\n      \r\n      // Check Auth Status\r\n      .addCase(checkAuthStatus.fulfilled, (state, action) => {\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = action.payload.isAuthenticated;\r\n        state.role = action.payload.user?.role || null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearAuth } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}